name: M09 Data Generator

on:
  workflow_dispatch:

jobs:
  generate:
    runs-on: ubuntu-latest
    env:
      CODE: '823-001'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install CLI tools
        run: |
          sudo apt update
          sudo apt install -y curl gpg jq
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg \
            | sudo gpg --dearmor -o /usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" \
            | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install -y gh

      - name: Authenticate GitHub CLI
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Parse CODE into date and run number
        run: |
          IFS='-' read DATE RUN <<< "$CODE"
          MONTH=${DATE:0:1}
          DAY=${DATE:1:2}
          NUM=$((10#$RUN))
          echo "Processing date: ${MONTH}/${DAY}, run: ${NUM}"

      - name: Verify input file exists
        run: |
          INPUT="GSAC-W/${CODE}.md"
          if [ ! -f "$INPUT" ]; then
            echo "Error: input file not found: $INPUT"
            exit 1
          fi

      - name: Create output directory
        run: mkdir -p output

      - name: Fetch issues and build JSON
        run: |
          OUT="output/${CODE}-m09.json"
          echo "[" > $OUT
          idx=0
          while read -r url; do
            [[ -z "$url" ]] && continue
            repo=${url#https://github.com/}
            repo=${repo%/issues*}
            num=${url##*/}
            (( idx>0 )) && echo "," >> $OUT
            echo "Fetching $repo#$num"
            gh issue view "$repo#$num" \
              --json number,title,body,comments,labels,assignees,createdAt,updatedAt,htmlUrl \
              >> $OUT
            ((idx++))
          done < "GSAC-W/${CODE}.md"
          echo "]" >> $OUT
          echo "Generated $OUT with $idx entries"

      - name: Validate JSON format
        run: jq empty output/${CODE}-m09.json || (echo "Invalid JSON format" && exit 1)

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${CODE}-m09
          path: output/${CODE}-m09.json
